/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewCard.java
 *
 * Created on 10-Jan-2011, 11:26:33 AM
 */
/**
 *
 * @author Jazbel Wang
 */
//Imports
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import javax.swing.ImageIcon;

/**
 *
 * @author Jazbel Wang
 */
public class NewCard extends javax.swing.JPanel implements MouseListener, KeyListener, MouseMotionListener {

    //VARIABLE DECLARATION
    /**
     * An array of Strings with the label data from the file
     */
    public String[] cardData;
    /**
     * An array that holds the file location data from the file
     */
    public String[] fileData;


    /** Creates new form NewCard */
    public NewCard() {
        initComponents();
        //The following code tells the panel what will be listening for events (essentially the panel will listen for its own events)
        addMouseListener(this);
        addKeyListener(this);
        addMouseMotionListener(this);
        
    }
    /**Creates a NewCard based on the information from the file
     *
     * @param labels - An array of Strings with the label data from the file
     * @param files - An array that holds the file location data from the file
     */
    public NewCard(String[] labels, String[] files) {
        //Pass the information into the cardData
        cardData = labels;
        initComponents();
        //Set the label name based on the data from the file
        balloonB.setText(cardData[0]);  //Example set text of button (wrong text)
        cakeB.setText(cardData[1]);  //Example set text of button (wrong text)
        candleB.setText(cardData[2]);  //Example set text of button (wrong text)
        flowerB.setText(cardData[3]);  //Example set text of button (wrong text)
        trainB.setText(cardData[4]);  //Example set text of button (wrong text)
        giftB.setText(cardData[5]);  //Example set text of button (wrong text)
        frameB.setText(cardData[6]);  //Example set text of button (wrong text)
        drawingArea1.setFileData(files);    //give file data to DrawingArea
        //The following code tells the panel what will be listening for events (essentially the panel will listen for its own events)
        addMouseListener(this);
        addKeyListener(this);
        addMouseMotionListener(this);
        
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton7 = new javax.swing.JButton();
        canvas1 = new java.awt.Canvas();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        jToolBar1 = new javax.swing.JToolBar();
        redB = new javax.swing.JButton();
        blueB = new javax.swing.JButton();
        yellowB = new javax.swing.JButton();
        greenB = new javax.swing.JButton();
        violetB = new javax.swing.JButton();
        blackB = new javax.swing.JButton();
        label3 = new java.awt.Label();
        textField1 = new java.awt.TextField();
        drawingArea1 = new DrawingArea();
        giftB = new javax.swing.JButton();
        frameB = new javax.swing.JButton();
        cakeB = new javax.swing.JButton();
        candleB = new javax.swing.JButton();
        balloonB = new javax.swing.JButton();
        flowerB = new javax.swing.JButton();
        lineB = new javax.swing.JButton();
        trainB = new javax.swing.JButton();

        jButton7.setText("jButton7");

        label1.setText("Shapes and Images");

        label2.setText("Colours");

        jToolBar1.setBackground(new java.awt.Color(204, 204, 255));
        jToolBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255)));
        jToolBar1.setFloatable(false);
        jToolBar1.setForeground(new java.awt.Color(204, 204, 255));
        jToolBar1.setRollover(true);

        redB.setBackground(new java.awt.Color(255, 0, 0));
        redB.setForeground(new java.awt.Color(255, 0, 0));
        redB.setText("      ");
        redB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redBActionPerformed(evt);
            }
        });
        jToolBar1.add(redB);

        blueB.setBackground(new java.awt.Color(0, 0, 255));
        blueB.setForeground(new java.awt.Color(0, 0, 255));
        blueB.setText("      ");
        blueB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueBActionPerformed(evt);
            }
        });
        jToolBar1.add(blueB);

        yellowB.setBackground(new java.awt.Color(255, 255, 0));
        yellowB.setForeground(new java.awt.Color(255, 255, 0));
        yellowB.setText("      ");
        yellowB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yellowBActionPerformed(evt);
            }
        });
        jToolBar1.add(yellowB);

        greenB.setBackground(new java.awt.Color(0, 255, 0));
        greenB.setForeground(new java.awt.Color(0, 255, 0));
        greenB.setText("      ");
        greenB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greenBActionPerformed(evt);
            }
        });
        jToolBar1.add(greenB);

        violetB.setBackground(new java.awt.Color(204, 0, 204));
        violetB.setForeground(new java.awt.Color(204, 0, 204));
        violetB.setText("      ");
        violetB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                violetBActionPerformed(evt);
            }
        });
        jToolBar1.add(violetB);

        blackB.setBackground(new java.awt.Color(0, 0, 0));
        blackB.setText("      ");
        blackB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackBActionPerformed(evt);
            }
        });
        jToolBar1.add(blackB);

        label3.setText("Text");

        textField1.setText("textField1");
        textField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField1ActionPerformed(evt);
            }
        });

        drawingArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout drawingArea1Layout = new javax.swing.GroupLayout(drawingArea1);
        drawingArea1.setLayout(drawingArea1Layout);
        drawingArea1Layout.setHorizontalGroup(
            drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 443, Short.MAX_VALUE)
        );
        drawingArea1Layout.setVerticalGroup(
            drawingArea1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );

        giftB.setText("Gift");
        giftB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giftBActionPerformed(evt);
            }
        });

        frameB.setText("Frame");
        frameB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frameBActionPerformed(evt);
            }
        });

        cakeB.setText("Cake");
        cakeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cakeBActionPerformed(evt);
            }
        });

        candleB.setText("Candle");
        candleB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                candleBActionPerformed(evt);
            }
        });

        balloonB.setText("Background");
        balloonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balloonBActionPerformed(evt);
            }
        });

        flowerB.setText("Flowers");
        flowerB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flowerBActionPerformed(evt);
            }
        });

        lineB.setText("Line");
        lineB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineBActionPerformed(evt);
            }
        });

        trainB.setText("Train");
        trainB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(drawingArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cakeB, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(candleB, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(flowerB, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(balloonB, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(frameB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(giftB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(trainB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lineB, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textField1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(canvas1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(drawingArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(balloonB)
                            .addComponent(lineB))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(trainB)
                            .addComponent(cakeB))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(giftB)
                            .addComponent(candleB, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(frameB)
                            .addComponent(flowerB)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    //Method that sets the colour of the text and the line to red
    private void redBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redBActionPerformed
        drawingArea1.colour = Color.red;
        drawingArea1.repaint();
}//GEN-LAST:event_redBActionPerformed
    //Method that sets the colour of the text and the line to blue
    private void blueBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueBActionPerformed
        drawingArea1.colour = Color.blue;
        drawingArea1.repaint();
}//GEN-LAST:event_blueBActionPerformed
    //Method that sets the colour of the text and the line to yellow
    private void yellowBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yellowBActionPerformed
        drawingArea1.colour = Color.yellow;
        drawingArea1.repaint();
}//GEN-LAST:event_yellowBActionPerformed
    //Method that sets the colour of the text and the line to green
    private void greenBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greenBActionPerformed
        drawingArea1.colour = Color.green;
        drawingArea1.repaint();
}//GEN-LAST:event_greenBActionPerformed
    //Method that sets the colour of the text and the line to violet
    private void violetBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_violetBActionPerformed
        drawingArea1.colour = Color.magenta;
        drawingArea1.repaint();
}//GEN-LAST:event_violetBActionPerformed
    //Method that sets the colour of the text and the line to black
    private void blackBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackBActionPerformed
        drawingArea1.colour = Color.black;
        drawingArea1.repaint();
}//GEN-LAST:event_blackBActionPerformed
    
    private void textField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField1ActionPerformed
        drawingArea1.text = textField1.getText();
        drawingArea1.button = drawingArea1.TEXT;
        drawingArea1.repaint();
    }//GEN-LAST:event_textField1ActionPerformed

    private void giftBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giftBActionPerformed
        drawingArea1.toDraw = drawingArea1.gift;
        drawingArea1.button = drawingArea1.GIFT;
        drawingArea1.repaint();
    }//GEN-LAST:event_giftBActionPerformed

    private void cakeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cakeBActionPerformed
        drawingArea1.toDraw = drawingArea1.cakes;
        drawingArea1.button = drawingArea1.CAKE;
        drawingArea1.repaint();
    }//GEN-LAST:event_cakeBActionPerformed

    private void candleBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_candleBActionPerformed
        drawingArea1.toDraw = drawingArea1.candle;
        drawingArea1.button = drawingArea1.CANDLE;
        drawingArea1.repaint();
    }//GEN-LAST:event_candleBActionPerformed

    private void balloonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balloonBActionPerformed
        drawingArea1.toDraw = drawingArea1.balloon;
        drawingArea1.button = drawingArea1.BALLOONS;
        drawingArea1.repaint();
    }//GEN-LAST:event_balloonBActionPerformed

    private void flowerBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flowerBActionPerformed
        drawingArea1.toDraw = drawingArea1.flower;
        drawingArea1.button = drawingArea1.FLOWER;
        drawingArea1.repaint();
    }//GEN-LAST:event_flowerBActionPerformed

    private void lineBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineBActionPerformed
        drawingArea1.button = drawingArea1.LINE;
        drawingArea1.repaint();
    }//GEN-LAST:event_lineBActionPerformed

    private void frameBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frameBActionPerformed
        drawingArea1.toDraw = drawingArea1.frame;
        drawingArea1.button = drawingArea1.FRAME;
        drawingArea1.repaint();
    }//GEN-LAST:event_frameBActionPerformed

    private void trainBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainBActionPerformed
        drawingArea1.toDraw = drawingArea1.train;
        drawingArea1.button = drawingArea1.TRAIN;
        drawingArea1.repaint();
    }//GEN-LAST:event_trainBActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton balloonB;
    private javax.swing.JButton blackB;
    private javax.swing.JButton blueB;
    public javax.swing.JButton cakeB;
    public javax.swing.JButton candleB;
    private java.awt.Canvas canvas1;
    public DrawingArea drawingArea1;
    public javax.swing.JButton flowerB;
    private javax.swing.JButton frameB;
    public javax.swing.JButton giftB;
    private javax.swing.JButton greenB;
    private javax.swing.JButton jButton7;
    private javax.swing.JToolBar jToolBar1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private javax.swing.JButton lineB;
    private javax.swing.JButton redB;
    private java.awt.TextField textField1;
    public javax.swing.JButton trainB;
    public javax.swing.JButton violetB;
    private javax.swing.JButton yellowB;
    // End of variables declaration//GEN-END:variables

    public void mouseClicked(MouseEvent e) {
        //   drawingArea1.x1 = e.getX();
        //  drawingArea1.y1 = e.getY();
    }

    public void mousePressed(MouseEvent e) {
        System.out.println(e.getX() + ":" + e.getY());
        drawingArea1.x1 = e.getX();
        drawingArea1.y1 = e.getY();
    }

    //Method that gets the second coordinate and store the drawn images into an array
    public void mouseReleased(MouseEvent e) {
        System.out.println("2nd:" + e.getX() + ":" + e.getY());
        drawingArea1.x2 = e.getX();
        drawingArea1.y2 = e.getY();
        //Store different drawnImages depending on the type of image
        if (drawingArea1.button == drawingArea1.TEXT) {
            DrawnImages di = new DrawnImages(drawingArea1.x1, drawingArea1.y1, drawingArea1.button, drawingArea1.colour, drawingArea1.text);
            drawingArea1.images.add(di);
        } else if (drawingArea1.button == drawingArea1.LINE) {
            DrawnImages di = new DrawnImages(drawingArea1.x1, drawingArea1.y1, drawingArea1.x2, drawingArea1.y2, drawingArea1.button, drawingArea1.colour);
            drawingArea1.images.add(di);
        } else {
            DrawnImages di = new DrawnImages(drawingArea1.x1, drawingArea1.y1, drawingArea1.x2, drawingArea1.y2, drawingArea1.button);
            drawingArea1.images.add(di);
        }
        //Repaint the drawing area
        drawingArea1.repaint();
        //Set all the coordinates to zero, so that previously drawn image can't be changed
        drawingArea1.x1 = 0;
        drawingArea1.y1 = 0;
        drawingArea1.x2 = 0;
        drawingArea1.y2 = 0;

    }

    public void mouseEntered(MouseEvent e) {
    }

    public void mouseExited(MouseEvent e) {
    }

    public void keyTyped(KeyEvent e) {
    }

    public void keyPressed(KeyEvent e) {
    }

    public void keyReleased(KeyEvent e) {
    }
    //Method that while the mouse is dragging to the second coordinates, the image/line is displayed
    public void mouseDragged(MouseEvent e) {
        System.out.println("drag");
        drawingArea1.x2 = e.getX();
        drawingArea1.y2 = e.getY();
        drawingArea1.repaint();
    }

    public void mouseMoved(MouseEvent e) {
    }
}
